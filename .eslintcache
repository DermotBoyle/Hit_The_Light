[{"/Users/dermotboyle/Documents/Jump_The_Chasm/src/index.js":"1","/Users/dermotboyle/Documents/Jump_The_Chasm/src/App.js":"2","/Users/dermotboyle/Documents/Jump_The_Chasm/src/reportWebVitals.js":"3","/Users/dermotboyle/Documents/Jump_The_Chasm/src/CONSTANTS.js":"4","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Store/Reducers.js":"5","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Store/Context.js":"6","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/HighScore/ScoreBoard.js":"7","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/Game/GameWrapper/index.jsx":"8","/Users/dermotboyle/Documents/Jump_The_Chasm/src/StyledComponents/index.js":"9","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/Game/GameWrapper/hooks/useColorGenerator.js":"10","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/EndGame/index.jsx":"11","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/EndGame/hooks/useUpdateScoreBoard.js":"12"},{"size":500,"mtime":1608281960229,"results":"13","hashOfConfig":"14"},{"size":1713,"mtime":1608382051677,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608281960230,"results":"16","hashOfConfig":"14"},{"size":55,"mtime":1608293940423,"results":"17","hashOfConfig":"14"},{"size":466,"mtime":1608455681068,"results":"18","hashOfConfig":"14"},{"size":161,"mtime":1608453437400,"results":"19","hashOfConfig":"14"},{"size":2484,"mtime":1608455408568,"results":"20","hashOfConfig":"14"},{"size":1963,"mtime":1608315259662,"results":"21","hashOfConfig":"14"},{"size":2052,"mtime":1608460928897,"results":"22","hashOfConfig":"14"},{"size":400,"mtime":1608295660013,"results":"23","hashOfConfig":"14"},{"size":1324,"mtime":1608453861478,"results":"24","hashOfConfig":"14"},{"size":880,"mtime":1608456264806,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"18ktlwj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dermotboyle/Documents/Jump_The_Chasm/src/index.js",[],["53","54"],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/App.js",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/reportWebVitals.js",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/CONSTANTS.js",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/Store/Reducers.js",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/Store/Context.js",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/HighScore/ScoreBoard.js",["55"],"import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport Context from \"../../Store/Context\";\nimport {\n  CelebrateEmoji,\n  Wrapper,\n  ScoreBoardTitle,\n  NameContainer,\n  NameInput,\n  ScoreButton,\n} from \"../../StyledComponents\";\n\nexport default function ScoreBoard() {\n  const { state, dispatch } = useContext(Context);\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [scoreboard, setScoreboard] = useState([]);\n  const [userPosition,setUserPosition]  = useState([]);\n\n  useEffect(() => {\n    let scoreboardCopy = cloneDeep(state.scoreboard);\n    setScoreboard(scoreboardCopy);\n    interpretPosition(state.userPosition);\n  }, []);\n\n function handleNameSubmit (){\n   let updateInfo = scoreboard[userPosition];\n   updateInfo.name = name;\n   dispatch({type: 'UPDATE_SCOREBOARD', payload: scoreboard})\n   history.push('/');\n }\n\n function interpretPosition(position){\n     debugger;\n    if(position === false) return setUserPosition(false);\n    return setUserPosition(position);\n }\n\n  return (\n    <Wrapper>\n      {scoreboard.length === 1 && (\n        <>\n          <ScoreBoardTitle>\n            Looks like you're first on the board !{\" \"}\n            <CelebrateEmoji\n              alt=\"celebrate emoji\"\n              src={\"/assets/celebrate.svg\"}\n            />\n          </ScoreBoardTitle>\n        </>\n      )}\n      <NameContainer>\n        <ul>\n          {scoreboard.length >= 1 &&\n            scoreboard.map((user, index) =>\n              index !== userPosition ? (\n                <li key={index}>\n                  <p>\n                    {index+1}. {user.name}\n                  </p>\n                  <p>{user.score} </p>\n                </li>\n              ) : (\n               <p>{index+1}. <NameInput\n                  type=\"text\"\n                  onChange={(e) => setName(e.target.value)}\n                  value={name}\n                  placeholder=\"Enter you name here\"\n                />\n                {user.score}\n                </p> \n              )\n            )}\n          <label>Write your name</label>\n        </ul>\n      </NameContainer>\n      {userPosition !== false ? (\n        <ScoreButton onClick={() => handleNameSubmit()}>\n          {\" \"}\n          Submit score\n        </ScoreButton>\n      ) : (\n        <ScoreButton onClick={() => history.push(\"/\")}> Play again</ScoreButton>\n      )}\n    </Wrapper>\n  );\n}\n","/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/Game/GameWrapper/index.jsx",["56"],"import React, { useState, useEffect } from \"react\";\nimport EndGamePortal from \"../../EndGame/index\";\nimport { Wrapper, PlayBox, Timer } from \"../../../StyledComponents/index\";\nimport useColorGenerator from \"./hooks/useColorGenerator\";\n\nconst initalSeconds = 34;\n\nexport default function GameWrapper() {\n  const { getRandomColor, getRandomPlayBox } = useColorGenerator();\n\n  const [level, setLevel] = useState(4);\n  const [randomColor, setRandomColor] = useState(\"\");\n  const [chosenPlaybox, setChosenPlayBox] = useState(1);\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const [seconds, setSeconds] = useState(initalSeconds);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    let color = getRandomColor();\n    let num = getRandomPlayBox(0, level);\n    setChosenPlayBox(num);\n    setRandomColor(color);\n    setSeconds(initalSeconds - level);\n\n  }, [level]);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      if (seconds === 0) {\n        setIsOpen(true);\n        clearInterval(timer);\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  });\n\n  function handleProgress(index) {\n    if (index === chosenPlaybox) {\n      setScore( score + seconds * level)\n      setLevel(level + 1);\n    } else {\n      setIsOpen(true);\n    }\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <>\n     <Timer> Time : {seconds}</Timer>\n      <Wrapper templateSize={level}>\n        {Array(level * level)\n          .fill(\"box\")\n          .map((_, index) => {\n            return (\n              <PlayBox\n                key={index}\n                color={randomColor}\n                saturate={index === chosenPlaybox ? \"100%\" : \"50%\"}\n                onClick={() => handleProgress(index)}\n              />\n            );\n          })}\n      </Wrapper>\n      <EndGamePortal closeModal={closeModal} modalIsOpen={modalIsOpen} score={score} />\n    </>\n  );\n}\n","/Users/dermotboyle/Documents/Jump_The_Chasm/src/StyledComponents/index.js",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/Game/GameWrapper/hooks/useColorGenerator.js",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/EndGame/index.jsx",[],"/Users/dermotboyle/Documents/Jump_The_Chasm/src/Components/EndGame/hooks/useUpdateScoreBoard.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":27,"column":6,"nodeType":"63","endLine":27,"endColumn":8,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":26,"column":6,"nodeType":"63","endLine":26,"endColumn":13,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'state.scoreboard' and 'state.userPosition'. Either include them or remove the dependency array.","ArrayExpression",["69"],"React Hook useEffect has missing dependencies: 'getRandomColor' and 'getRandomPlayBox'. Either include them or remove the dependency array.",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [state.scoreboard, state.userPosition]",{"range":"75","text":"76"},"Update the dependencies array to be: [getRandomColor, getRandomPlayBox, level]",{"range":"77","text":"78"},[775,777],"[state.scoreboard, state.userPosition]",[871,878],"[getRandomColor, getRandomPlayBox, level]"]